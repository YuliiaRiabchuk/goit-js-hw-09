{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAmBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IAaP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAd,GAASe,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAIxE,SAASc,EAASL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,EAAAd,GAASe,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CA9CxDgB,SAASC,cAAc,SAC/BC,iBAAiB,UAItB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAgCC,EAAAF,EAAIG,cAA5BtB,EAAwBqB,EAAxBrB,MAAOuB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAErBC,QAAQC,IAAIF,EAAQxB,EAAOuB,GAqB7B,SAAyBvB,EAAOuB,EAAMC,GACpC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAIlC7B,EAHwB6B,EAAI,EACR3B,EAAQuB,EAAOI,GAESC,KAAKpB,GAAWqB,MAAMf,E,EAxBpEgB,CAAgBC,OAAO/B,GAAQ+B,OAAOR,GAAOQ,OAAOP,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport { Notify } from 'notiflix'\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\n// console.log(form.elements);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget;\n\n  console.log(amount, delay, step);\n\n  promisesCounter(Number(delay), Number(step), Number(amount));\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction promisesCounter(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    const promisePosition = i + 1;\n    const delayAmount = delay + step * i;\n\n    createPromise(promisePosition, delayAmount).then(onResolve).catch(onReject);\n  }\n}\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  \n}\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolve","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onReject","failure","document","querySelector","addEventListener","evt","preventDefault","_currentTarget","currentTarget","step","amount","console","log","i","then","catch","$ce04d3a99e08e73b$var$promisesCounter","Number"],"version":3,"file":"03-promises.f9a38d93.js.map"}